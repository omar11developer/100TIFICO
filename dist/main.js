(()=>{"use strict";const a="https://rickandmortyapi.com/api/character/",n=async n=>{const s=n?`${a}${n}`:a;try{const a=await fetch(s);return await a.json()}catch(a){console.log("Fetch Error",a)}},s=()=>location.hash.slice(1).toLocaleLowerCase().split("/")[1]||"/",e=()=>'\n        <div class="Error404">\n        <div class="Error404-content">\n        <svg xmlns="http://www.w3.org/2000/svg" width="150" height="150" fill="currentColor" class="bi bi-emoji-frown" viewBox="0 0 16 16">\n        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>\n        <path d="M4.285 12.433a.5.5 0 0 0 .683-.183A3.498 3.498 0 0 1 8 10.5c1.295 0 2.426.703 3.032 1.75a.5.5 0 0 0 .866-.5A4.498 4.498 0 0 0 8 9.5a4.5 4.5 0 0 0-3.898 2.25.5.5 0 0 0 .183.683zM7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zm4 0c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5z"/>\n        </svg>\n        <h2>Error 404</h2>\n        </div>\n           \n        </div>\n    ',r={"/":async()=>`\n    <div class="Encabezado">\n    <h1>Personajes de la serie  </h1>\n        <div class="hr"></div>\n    </div>\n    <div class="Characters">\n        \n        ${(await n()).results.map((a=>`\n            <article class="Characters-item">\n            <a href="#/${a.id}/">\n            <img src="${a.image}" alt="${a.name}">\n            <h2>${a.name}</h2>\n            </a>\n            </article>\n        `)).join("")}\n   \n    </div>\n    `,"/:id":async()=>{const a=s(),e=await n(a);return`\n    <div class="nav">\n        <h1><span>${e.name}</span></h1>\n        <div class="hr"></div>\n    </div>\n    <div class="Characters-inner ">\n        \n        <articule class="Characters-card">\n            <img src="${e.image}" alt="${e.name}">\n        \n        </articule>\n        <articule class="Characters-card">\n            <h3>Episodes: <span class="Characters-card--span">${e.episode.length}</span></h3>\n            <h3>Status: <span class="Characters-card--span">${e.status}</span></h3>\n            <h3>Species: <span class="Characters-card--span">${e.species}</span></h3>\n            <h3>Gender: <span class="Characters-card--span">${e.gender}</span></h3>\n            <h3>Origin: <span class="Characters-card--span">${e.origin.name}</span></h3>\n            <h3>Last Location: <span class="Characters-card--span">${e.location.name}</span></h3>\n        </articule>\n    </div>\n    <a href="/" class="btn-regresar">\n    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-arrow-left-circle-fill" viewBox="0 0 16 16">\n  <path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z"/>\n</svg>\n    </a>\n`},"/Contact":"Contact"},t=async()=>{const a=document.getElementById("Header"),n=document.getElementById("content");a.innerHTML=await'\n    <div class="header-main">\n        <div class="header-logo">\n            <h1>\n                <a href="/">\n                    100tifi.co\n                </a>\n            </h1>\n        </div>\n        <div class="header-nav">\n            <a href="#/about/">About</a>\n        </div>\n    </div>\n    ';let t=s(),c=await(a=>a.length<=3?"/"===a?a:"/:id":`/${a}`)(t),i=r[c]?r[c]:e;n.innerHTML=await i()};window.addEventListener("load",t),window.addEventListener("hashchange",t)})();